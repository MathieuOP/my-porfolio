{"version":3,"sources":["assets/img/logo.png","components/Navbar/index.js","store/reducer.js","containers/Navbar.js","components/ErrorMessage/index.js","components/Buttons/index.js","containers/Buttons.js","components/Pagination/index.js","components/Grid/index.js","components/List/index.js","components/ReposResults/index.js","containers/ReposResults.js","components/SearchBar/index.js","containers/SearchBar.js","components/Home/index.js","containers/Home.js","components/About/index.js","components/RepoList/index.js","containers/RepoList.js","components/NotFound/index.js","components/App/index.js","containers/App.js","serviceWorker.js","store/ajaxMiddleware.js","store/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","_ref","isConnected","disconnect","react_default","a","createElement","Segment","inverted","Menu","pointing","secondary","Item","exact","name","as","NavLink","to","Link","onClick","initialState","datas","datasRepo","inputSearchValue","inputConnexionValue","researchDone","loading","content","repoUrl","nameRepo","userData","idRepo","repoForFav","urlContentReadMe","userRepo","errorMessage","page","searchName","totalCount","arrayForFav","submitInputSearch","type","displayErrorMessage","isFavForCss","state","undefined","find","repo","id","reducer","arguments","length","action","Object","objectSpread","formatContent","forEach","checkRepo","url","urlRepo","push","filter","repoDelete","toConsumableArray","data","connect","dispatch","ErrorMessage","Message","negative","Header","Buttons","chooseFormatContent","handdleChoose","Button","Group","Or","positive","console","log","MyPagination","displayPage","numPage","Pagination","e","target","getAttribute","defaultActivePage","totalPages","Math","ceil","Grid","handleClickRepo","handleClick","className","Card","map","_ref2","image","login","description","key","Image","src","Content","Meta","Description","extra","Icon","size","href","TheList","ReposResults","viewRepo","isFavoris","containers_Buttons","src_components_Grid","components_List","src_components_Pagination","dataRepo","SearchBar","changeInputSearch","onSubmit","preventDefault","Input","value","onChange","placeholder","containers_ReposResults","Home","changeInputConnexion","submitInputConnexion","alt","bio","blog","html_url","About","logo","RepoList","react_router_dom","Table","celled","striped","Row","HeaderCell","Body","sha","Cell","with_html_default","escapeHtml","source","NotFound","App","containers_Navbar","components_ErrorMessage","react_router","path","component","render","containers_SearchBar","containers_RepoList","Boolean","window","location","hostname","match","ajaxMiddleware","store","next","axios","get","concat","getState","headers","Authorization","then","response","total_count","items","owner","avatar_url","fav","receivedData","catch","error","newDataArray","urlReadMe","file","dir","download_url","rep","contentReadMe","dataUser","repos_url","receivedDataUser","appliedMiddlewares","applyMiddleware","devTools","devToolsExtension","enhancers","compose","apply","createStore","rootComponent","es","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.43af3503.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a9559ffd.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Menu, Segment } from 'semantic-ui-react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport './index.scss';\r\n\r\nconst Navbar = ({ isConnected, disconnect }) => {\r\n  const handleClickDisconnect = () => {\r\n    disconnect();\r\n  };\r\n\r\n  return (\r\n    <Segment inverted>\r\n      <Menu inverted pointing secondary>\r\n        <Menu.Item\r\n          exact\r\n          name=\"Home\"\r\n          as={NavLink}\r\n          to=\"/\"\r\n        />\r\n\r\n        {\r\n          isConnected && (\r\n            <Menu.Item\r\n              name=\"Search\"\r\n              as={NavLink}\r\n              to=\"/search\"\r\n            />\r\n          )\r\n        }\r\n\r\n        <Menu.Item\r\n          name=\"About\"\r\n          as={NavLink}\r\n          to=\"/about\"\r\n        />\r\n\r\n        {\r\n          isConnected && (\r\n            <Menu.Item\r\n              name=\"Deconnexion\"\r\n              as={Link}\r\n              to=\"/\"\r\n              onClick={handleClickDisconnect}\r\n            />\r\n          )\r\n        }\r\n      </Menu>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  isConnected: PropTypes.bool.isRequired,\r\n  disconnect: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Navbar;\r\n","/**\r\n * Initial State\r\n */\r\n\r\n// TOKEN : 69c1e0bacded67c5e3cfb942441adb7d6a567a08\r\n\r\nconst initialState = {\r\n  isConnected: false,\r\n  datas: [],\r\n  datasRepo: [],\r\n  inputSearchValue: '',\r\n  inputConnexionValue: '',\r\n  researchDone: false,\r\n  loading: false,\r\n  content: '',\r\n  repoUrl: '',\r\n  nameRepo: '',\r\n  userData: {},\r\n  idRepo: '',\r\n  repoForFav: [],\r\n  urlContentReadMe: '',\r\n  userRepo: [],\r\n  errorMessage: '',\r\n  page: '1',\r\n  searchName: '',\r\n  totalCount: 0,\r\n};\r\n\r\n/**\r\n * Types\r\n */\r\nconst CHANGE_INPUT_SEARCH = 'CHANGE_INPUT_SEARCH';\r\nexport const SUBMIT_INPUT_SEARCH = 'SUBMIT_INPUT_SEARCH';\r\nconst CHANGE_INPUT_CONNEXION = 'CHANGE_INPUT_CONNEXION';\r\nexport const SUBMIT_INPUT_CONNEXION = 'SUBMIT_INPUT_CONNEXION';\r\nexport const RECEIVED_DATA = 'RECEIVED_DATA';\r\nconst FORMAT_CONTENT = 'FORMAT_CONTENT';\r\nexport const VIEW_REPO = 'VIEW_REPO';\r\nexport const RECEIVED_REPO_DATA = 'RECEIVED_REPO_DATA';\r\nconst IS_CONNECTED = 'IS_CONNECTED';\r\nconst DISCONNECT = 'DISCONNECT';\r\nconst FAVORIS = 'FAVORIS';\r\nconst CONTENT_READ_ME = 'CONTENT_READ_ME';\r\nconst RECEIVED_REPO_USER_DATA = 'RECEIVED_REPO_USER_DATA';\r\nconst ERR0R = 'ERROR';\r\nconst SHOW_PAGE = 'SHOW_PAGE';\r\n\r\n/**\r\n * Traitements\r\n */\r\nlet arrayForFav = [];\r\n/**\r\n * Reducer\r\n */\r\nconst reducer = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case CHANGE_INPUT_SEARCH:\r\n      return {\r\n        ...state,\r\n        inputSearchValue: action.inputSearchValue,\r\n      };\r\n    case SUBMIT_INPUT_SEARCH:\r\n      return {\r\n        ...state,\r\n        loading: action.loading,\r\n        content: 'grid',\r\n        searchName: state.inputSearchValue,\r\n        page: (state.searchName === state.inputSearchValue) ? state.page : '1',\r\n      };\r\n    case CHANGE_INPUT_CONNEXION:\r\n      return {\r\n        ...state,\r\n        inputConnexionValue: action.inputConnexionValue,\r\n      };\r\n    case SUBMIT_INPUT_CONNEXION:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case RECEIVED_DATA:\r\n      return {\r\n        ...state,\r\n        datas: action.datas,\r\n        loading: false,\r\n        researchDone: true,\r\n        errorMessage: '',\r\n        totalCount: action.totalCount,\r\n      };\r\n    case RECEIVED_REPO_DATA:\r\n      return {\r\n        ...state,\r\n        datasRepo: action.datasRepo,\r\n        loading: false,\r\n        errorMessage: '',\r\n      };\r\n    case FORMAT_CONTENT:\r\n      return {\r\n        ...state,\r\n        content: action.formatContent,\r\n      };\r\n    case VIEW_REPO:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        repoUrl: action.repoUrl,\r\n        nameRepo: action.nameRepo,\r\n        idRepo: action.idRepo,\r\n      };\r\n    case IS_CONNECTED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isConnected: true,\r\n        userData: action.userData,\r\n      };\r\n    case DISCONNECT:\r\n      arrayForFav = [];\r\n      return initialState;\r\n    case FAVORIS:\r\n      state.datas.forEach((repo) => {\r\n        if (repo.id === action.idRepo) {\r\n          const checkIsFav = state.repoForFav.find((checkRepo) => {\r\n            if (checkRepo.id === action.idRepo) {\r\n              return {\r\n                id: repo.id,\r\n                url: repo.urlRepo,\r\n              };\r\n            }\r\n          });\r\n\r\n          if (checkIsFav === undefined) {\r\n            arrayForFav.push({\r\n              id: repo.id,\r\n              url: repo.urlRepo,\r\n            });\r\n          }\r\n          else {\r\n            arrayForFav = arrayForFav.filter(repoDelete => repoDelete.id !== action.idRepo);\r\n          }\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        repoForFav: [\r\n          ...arrayForFav,\r\n        ],\r\n      };\r\n    case CONTENT_READ_ME:\r\n      return {\r\n        ...state,\r\n        urlContentReadMe: action.content,\r\n      };\r\n    case RECEIVED_REPO_USER_DATA:\r\n      return {\r\n        ...state,\r\n        userRepo: [\r\n          ...action.data,\r\n        ],\r\n        errorMessage: '',\r\n      };\r\n    case ERR0R:\r\n      return {\r\n        ...state,\r\n        errorMessage: action.errorMessage,\r\n        loading: false,\r\n      };\r\n    case SHOW_PAGE:\r\n      return {\r\n        ...state,\r\n        page: action.page,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/**\r\n * Action Creators\r\n */\r\nexport const changeInputSearch = inputSearchValue => ({\r\n  type: CHANGE_INPUT_SEARCH,\r\n  inputSearchValue,\r\n});\r\n\r\nexport const submitInputSearch = loading => ({\r\n  type: SUBMIT_INPUT_SEARCH,\r\n  loading,\r\n});\r\n\r\nexport const changeInputConnexion = inputConnexionValue => ({\r\n  type: CHANGE_INPUT_CONNEXION,\r\n  inputConnexionValue,\r\n});\r\n\r\nexport const submitInputConnexion = () => ({\r\n  type: SUBMIT_INPUT_CONNEXION,\r\n});\r\n\r\nexport const receivedData = (datas, totalCount) => ({\r\n  type: RECEIVED_DATA,\r\n  datas,\r\n  totalCount,\r\n});\r\n\r\nexport const receivedRepoData = datasRepo => ({\r\n  type: RECEIVED_REPO_DATA,\r\n  datasRepo,\r\n});\r\n\r\nexport const chooseFormatContent = formatContent => ({\r\n  type: FORMAT_CONTENT,\r\n  formatContent,\r\n});\r\n\r\nexport const viewRepo = (repoUrl, nameRepo, idRepo) => {\r\n  return ({\r\n    type: VIEW_REPO,\r\n    repoUrl,\r\n    nameRepo,\r\n    idRepo,\r\n  });\r\n}\r\n\r\nexport const receivedDataUser = userData => ({\r\n  type: IS_CONNECTED,\r\n  userData,\r\n});\r\n\r\nexport const disconnect = () => ({\r\n  type: DISCONNECT,\r\n});\r\n\r\nexport const isFavoris = idRepo => ({\r\n  type: FAVORIS,\r\n  idRepo,\r\n});\r\n\r\nexport const reveivedContentReadMe = content => ({\r\n  type: CONTENT_READ_ME,\r\n  content,\r\n});\r\n\r\nexport const receivedRepoUserData = data => ({\r\n  type: RECEIVED_REPO_USER_DATA,\r\n  data,\r\n});\r\n\r\nexport const displayErrorMessage = errorMessage => ({\r\n  type: ERR0R,\r\n  errorMessage,\r\n});\r\n\r\nexport const isFavForCss = state => (idRepo) => {\r\n  const verif = state.repoForFav.find(repo => repo.id === idRepo);\r\n  return verif === undefined ? false : true;\r\n};\r\n\r\nexport const displayPage = page => ({\r\n  type: SHOW_PAGE,\r\n  page,\r\n})\r\n/**\r\n * Selectors\r\n */\r\n// export const getRepoFav = state => state.repoFav.filter(data => data.fav && data.urlRepo);\r\n/**\r\n * Export\r\n */\r\nexport default reducer;\r\n","import { connect } from 'react-redux';\r\nimport Navbar from '../components/Navbar';\r\nimport { changeView, disconnect } from '../store/reducer';\r\n\r\nconst mapStateToProps = state => ({\r\n  isConnected: state.isConnected,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  disconnect: () => {\r\n    dispatch(disconnect());\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Navbar);\r\n","import React from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\nconst ErrorMessage = ({errorMessage}) => (\r\n  <Message negative>\r\n    <Message.Header>Erreur</Message.Header>\r\n    <p>{errorMessage}</p>\r\n  </Message>\r\n)\r\n\r\nexport default ErrorMessage;\r\n","import React from 'react';\r\nimport { Button } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport './index.scss';\r\n\r\nconst Buttons = ( { chooseFormatContent }) => {\r\n  const handdleChoose = formatContent => () => {\r\n    chooseFormatContent(formatContent);\r\n  };\r\n\r\n  return (\r\n    <Button.Group>\r\n      <Button onClick={handdleChoose('list')}>List</Button>\r\n      <Button.Or />\r\n      <Button onClick={handdleChoose('grid')} positive>Grid</Button>\r\n    </Button.Group>\r\n  );\r\n};\r\n\r\nButtons.propTypes = {\r\n  chooseFormatContent: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Buttons;\r\n","import { connect } from 'react-redux';\r\nimport Buttons from '../components/Buttons';\r\nimport { chooseFormatContent } from '../store/reducer';\r\n\r\nconst mapStateToProps = state => ({\r\n  content: state.content,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  chooseFormatContent: (formatContent) => {\r\n    console.log(formatContent);\r\n    dispatch(chooseFormatContent(formatContent));\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Buttons);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Pagination } from 'semantic-ui-react';\r\nimport './index.scss';\r\n\r\nconst MyPagination = ({ displayPage, submitInputSearch, numPage, totalCount }) => {\r\n  const onPageChange = (e) => {\r\n    const page = e.target.getAttribute('value');\r\n    displayPage(page);\r\n    submitInputSearch(true);\r\n  };\r\n\r\n  return (\r\n    <Pagination\r\n      onClick={onPageChange}\r\n      defaultActivePage={numPage}\r\n      pointing\r\n      secondary\r\n      totalPages={Math.ceil(totalCount / 30)}\r\n    />\r\n  );\r\n};\r\n\r\nMyPagination.propTypes = {\r\n  displayPage: PropTypes.func.isRequired,\r\n  submitInputSearch: PropTypes.func.isRequired,\r\n  numPage: PropTypes.string.isRequired,\r\n  totalCount: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default MyPagination;\r\n","import React from 'react';\r\nimport { Card, Image, Icon } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.scss';\r\n\r\nconst Grid = ({ datas, handleClickRepo, handleClick, isFavForCss }) => {\r\n\r\n  return (\r\n    <div className=\"grid\">\r\n      <Card.Group>\r\n        {\r\n          datas.map(({ id, name, image, url, login, urlRepo, description }) => (\r\n            <Card className=\"grid-card\" key={id}>\r\n              <Image src={image} as={Link} to=\"/repo\" onClick={handleClickRepo(url, name, id)} />\r\n              <Card.Content>\r\n                <Card.Header>{name}</Card.Header>\r\n                <Card.Meta>\r\n                  {login}\r\n                </Card.Meta>\r\n                <Card.Description>{description}</Card.Description>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Icon onClick={handleClick(id)} name={isFavForCss(id) ? 'heart' : 'heart outline'} size=\"large\" className=\"icon\" />\r\n                <a href={urlRepo} target=\"_blank\">Voir sur GitHub</a>\r\n              </Card.Content>\r\n            </Card>\r\n          ))\r\n        }\r\n      </Card.Group>\r\n    </div>\r\n  );\r\n};\r\n\r\nGrid.propTypes = {\r\n  datas: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  handleClickRepo: PropTypes.func.isRequired,\r\n  isFavForCss: PropTypes.func.isRequired,\r\n  handleClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Grid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, Icon } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.scss';\r\n\r\nconst TheList = ({ datas, handleClickRepo, handleClick, isFavForCss }) => {\r\n  return (\r\n    <div className=\"list\">\r\n      {\r\n        datas.map(({ id, name, url, urlRepo }) => (\r\n          <Card key={id}>\r\n            <Card.Content>\r\n              <Card.Header onClick={handleClickRepo(url, name, id)} as={Link} key={id} to=\"/repo\">{name}</Card.Header>\r\n              <div className=\"list-content\">\r\n                <Icon onClick={handleClick(id)} name={isFavForCss(id) ? 'heart' : 'heart outline'} size=\"large\" className=\"icon\" />\r\n                <a href={urlRepo} target=\"_blank\">Voir sur GitHub</a>\r\n              </div>\r\n            </Card.Content>\r\n          </Card>\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nTheList.propTypes = {\r\n  datas: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  handleClickRepo: PropTypes.func.isRequired,\r\n  isFavForCss: PropTypes.func.isRequired,\r\n  handleClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TheList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Buttons from '../../containers/Buttons';\r\nimport Pagination from '../Pagination';\r\nimport Grid from '../Grid';\r\nimport List from '../List';\r\nimport './index.scss';\r\n\r\nconst ReposResults = ({ \r\n  searchName,\r\n  datas,\r\n  content,\r\n  viewRepo,\r\n  isFavoris,\r\n  isFavForCss,\r\n  displayPage,\r\n  submitInputSearch,\r\n  numPage,\r\n  totalCount,\r\n}) => {\r\n  const handleClickRepo = (repoUrl, nameRepo, idRepo) => () => {\r\n    viewRepo(repoUrl, nameRepo, idRepo);\r\n  };\r\n\r\n  const handleClick = idRepo => () => {\r\n    // console.log(idRepo);\r\n    isFavoris(idRepo);\r\n  };\r\n\r\n  return (\r\n    <div className=\"result\">\r\n      <div>\r\n        <p className=\"result-p\">La recherche pour <span>\"{searchName}\"</span> a donnée {totalCount} résultat(s)</p>\r\n        { totalCount !== 0 && <Buttons /> }\r\n      </div>\r\n\r\n      {\r\n        (content === 'grid') && (\r\n          <Grid\r\n            isFavForCss={isFavForCss}\r\n            handleClick={handleClick}\r\n            datas={datas}\r\n            handleClickRepo={handleClickRepo}\r\n          />\r\n        )\r\n      }\r\n      {\r\n        (content === 'list') && (\r\n          <List\r\n            isFavForCss={isFavForCss}\r\n            handleClick={handleClick}\r\n            datas={datas}\r\n            handleClickRepo={handleClickRepo}\r\n          />\r\n        )\r\n      }\r\n      {\r\n        totalCount !== 0 && <Pagination displayPage={displayPage} totalCount={totalCount} submitInputSearch={submitInputSearch} numPage={numPage} />\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nReposResults.propTypes = {\r\n  datas: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  searchName: PropTypes.string.isRequired,\r\n  content: PropTypes.string.isRequired,\r\n  viewRepo: PropTypes.func.isRequired,\r\n  isFavoris: PropTypes.func.isRequired,\r\n  isFavForCss: PropTypes.func.isRequired,\r\n  submitInputSearch: PropTypes.func.isRequired,\r\n  displayPage: PropTypes.func.isRequired,\r\n  numPage: PropTypes.string.isRequired,\r\n  totalCount: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ReposResults;\r\n","import { connect } from 'react-redux';\r\nimport ReposResults from '../components/ReposResults';\r\nimport { viewRepo, isFavoris, isFavForCss, submitInputSearch, displayPage } from '../store/reducer';\r\n\r\nconst mapStateToProps = state => ({\r\n  datasRepo: state.dataRepo,\r\n  content: state.content,\r\n  datas: state.datas,\r\n  searchName: state.searchName,\r\n  isFavForCss: isFavForCss(state),\r\n  numPage: state.page,\r\n  displayPage: state.displayPage,\r\n  totalCount: state.totalCount,\r\n\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  viewRepo: (repoUrl, nameRepo, idRepo) => {\r\n    dispatch(viewRepo(repoUrl, nameRepo, idRepo));\r\n  },\r\n  isFavoris: (idRepo) => {\r\n    dispatch(isFavoris(idRepo));\r\n  },\r\n  submitInputSearch: (loading) => {\r\n    // console.log('submit');\r\n    dispatch(submitInputSearch(loading));\r\n  },\r\n  displayPage: (page) => {\r\n    dispatch(displayPage(page));\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(ReposResults);\r\n","import React from 'react';\r\nimport { Input } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport ReposResults from '../../containers/ReposResults';\r\n\r\nimport './index.scss';\r\n\r\nconst SearchBar = ({ \r\n  inputSearchValue,\r\n  changeInputSearch,\r\n  submitInputSearch,\r\n  loading,\r\n  researchDone,\r\n}) => {\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    submitInputSearch(true);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { value } = e.target;\r\n    changeInputSearch(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"field\">\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <Input\r\n            className=\"field-input\"\r\n            type=\"text\"\r\n            value={inputSearchValue}\r\n            onChange={handleChange}\r\n            placeholder=\"Rechercher\"\r\n          />\r\n        </form>\r\n\r\n        {\r\n          (researchDone && !loading) && (\r\n            <ReposResults />\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  inputSearchValue: PropTypes.string.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  researchDone: PropTypes.bool.isRequired,\r\n  changeInputSearch: PropTypes.func.isRequired,\r\n  submitInputSearch: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchBar;\r\n","import { connect } from 'react-redux';\r\nimport SearchBar from '../components/SearchBar';\r\nimport { changeInputSearch, submitInputSearch } from '../store/reducer';\r\n\r\nconst mapStateToProps = state => ({\r\n  inputSearchValue: state.inputSearchValue,\r\n  loading: state.loading,\r\n  researchDone: state.researchDone,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeInputSearch: (inputSearchValue) => {\r\n    dispatch(changeInputSearch(inputSearchValue));\r\n  },\r\n  submitInputSearch: (loading) => {\r\n    // console.log('submit');\r\n    dispatch(submitInputSearch(loading));\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(SearchBar);\r\n","import React from 'react';\r\nimport { Input } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport './index.scss';\r\n\r\nconst Home = ({\r\n  inputConnexionValue,\r\n  changeInputConnexion,\r\n  submitInputConnexion,\r\n  userData,\r\n  isConnected,\r\n  repoForFav,\r\n  userRepo,\r\n}) => {\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    submitInputConnexion();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { value } = e.target;\r\n    changeInputConnexion(value);\r\n  };\r\n\r\n  return (\r\n    isConnected === false ? (\r\n      <div className=\"homeNotConnected\">\r\n        <form onSubmit={handleSubmit}>\r\n          <p> Entrez votre token de connexion: </p>\r\n          <Input placeholder=\"Votre token\" type=\"password\" value={inputConnexionValue} onChange={handleChange} />\r\n        </form>\r\n      </div>\r\n    )\r\n      : (\r\n        <div className=\"homeConnected\">\r\n          <div className=\"homeConnected-wrapper\">\r\n            <h2>Mon profil</h2>\r\n            <img\r\n              src={userData.image}\r\n              alt=\"profil\"\r\n            />\r\n     \r\n            <ul>\r\n              <li><span>Login: </span> {userData.login}</li>\r\n              <li><span>Bio: </span>{userData.bio && userData.bio}</li>\r\n              <li><span>Blog/Site: </span><a href={userData.blog}> {userData.blog}</a></li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"userRepoData\">\r\n            <h2>Mes repos</h2>\r\n            {\r\n              userRepo.map(({ html_url, id }) => (\r\n                <p key={id}><a href={html_url}>{html_url}</a></p>\r\n              ))\r\n            }\r\n          </div>\r\n\r\n          {\r\n            repoForFav.length > 0 && (\r\n              <div className=\"favoris\">\r\n                <h2>Mes favoris</h2>\r\n                <ul>\r\n                  {\r\n                    repoForFav.map(repo => (\r\n                      <li key={repo.id}><a href={repo.url}> {repo.url} </a></li>\r\n                    ))\r\n                  }\r\n                </ul>\r\n              </div>\r\n            )\r\n          }\r\n        </div>\r\n      )\r\n  );\r\n};\r\n\r\nHome.propTypes = {\r\n  inputConnexionValue: PropTypes.string.isRequired,\r\n  changeInputConnexion: PropTypes.func.isRequired,\r\n  submitInputConnexion: PropTypes.func.isRequired,\r\n  userData: PropTypes.object.isRequired,\r\n  isConnected: PropTypes.bool.isRequired,\r\n  repoForFav: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default Home;\r\n","import { connect } from 'react-redux';\r\nimport Home from '../components/Home';\r\nimport { changeInputConnexion, submitInputConnexion } from '../store/reducer';\r\n\r\nconst mapStateToProps = state => ({\r\n  inputConnexionValue: state.inputConnexionValue,\r\n  userData: state.userData,\r\n  isConnected: state.isConnected,\r\n  repoForFav: state.repoForFav,\r\n  userRepo: state.userRepo,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeInputConnexion: (inputConnexionValue) => {\r\n    dispatch(changeInputConnexion(inputConnexionValue));\r\n  },\r\n  submitInputConnexion: () => {\r\n    dispatch(submitInputConnexion());\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Home);\r\n","import React from 'react';\r\nimport logo from '../../assets/img/logo.png';\r\nimport './index.scss';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"about\">\r\n      <div className=\"about-img\">\r\n        <img src={logo} alt=\"logo\" />\r\n      </div>\r\n\r\n      <div className=\"about-wrapper-p\">\r\n        <p>\r\n          Ce site utilisant l'API de GitHub offre la possiblité de faire des recherches afin d'obtenir des informations sur les utilisateurs.\r\n        </p>\r\n        <p>\r\n          Vous devez entrer votre token pour avoir accès au site. Vous pouvez générer un token en cliquant <a href=\"https://github.com/settings/tokens\">ICI</a>\r\n        </p>\r\n        <p>\r\n          Pour la création du site, j'ai utilisé les technos suivantes : React, JSX, JavaScript, Axios, Semantic UI, SASS.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { Table, Icon } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.scss';\r\n\r\nimport ReactMarkdown from 'react-markdown/with-html';\r\n\r\nconst RepoList = ({ datasRepo, nameRepo, urlContentReadMe, loading }) => {\r\n\r\n  return (\r\n    !loading && (\r\n      <div className=\"wrapperTable\">\r\n        <Link to=\"/search\" className=\"link\">Retour</Link>\r\n\r\n        <Table celled striped>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>{nameRepo}</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n\r\n          <Table.Body>\r\n            {\r\n              datasRepo.map((data) => {\r\n                return (\r\n                  <Table.Row key={data.sha}>\r\n                    <Table.Cell>\r\n                      <Icon name={data.type === 'file' ? 'file outline' : 'folder'} /> {data.name}\r\n                    </Table.Cell>\r\n                  </Table.Row>\r\n                );\r\n              })\r\n            }\r\n          </Table.Body>\r\n        </Table>\r\n\r\n        <div className=\"wrapper-contentReadMe\">\r\n          <p className=\"contentReadMe-title\">README.md</p>\r\n          <div className=\"contentReadMe\">\r\n            <ReactMarkdown escapeHtml={false} source={urlContentReadMe} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n    \r\n  );\r\n};\r\n\r\n\r\nRepoList.propTypes = {\r\n  datasRepo: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  nameRepo: PropTypes.string.isRequired,\r\n  urlContentReadMe: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default RepoList;\r\n","import { connect } from 'react-redux';\r\nimport RepoList from '../components/RepoList';\r\n\r\nconst mapStateToProps = state => ({\r\n  datasRepo: state.datasRepo,\r\n  nameRepo: state.nameRepo,\r\n  urlContentReadMe: state.urlContentReadMe,\r\n  loading: state.loading,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(RepoList);\r\n","import React from 'react';\r\nimport './index.scss';\r\n\r\nconst NotFound = () => (\r\n  <div className=\"error404\">\r\n    <h1>Erreur 404</h1>\r\n    <p>La page recherchée est introubable</p>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n\r\n","/**\r\n * Import\r\n */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\n/**\r\n * Local import\r\n */\r\n\r\n// Composants\r\nimport Navbar from '../../containers/Navbar';\r\nimport ErrorMessage from '../ErrorMessage';\r\nimport SearchBar from '../../containers/SearchBar';\r\nimport Home from '../../containers/Home';\r\nimport About from '../About';\r\nimport RepoList from '../../containers/RepoList';\r\nimport NotFound from '../NotFound';\r\n\r\n// Styles et assets\r\nimport './app.scss';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n/**\r\n * Code\r\n */\r\nconst App = ({ loading, isConnected, errorMessage }) => (\r\n  <div id=\"app\">\r\n    <Navbar />\r\n\r\n    {\r\n      errorMessage !== '' && (\r\n        <ErrorMessage errorMessage={errorMessage} />\r\n      )\r\n    }\r\n\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n\r\n      {\r\n        <Route\r\n          path=\"/search\"\r\n          render={() => (\r\n            isConnected ? (\r\n              <SearchBar />\r\n            ) : (\r\n              <Redirect to=\"/\" />\r\n            )\r\n          )}\r\n        />\r\n      }\r\n\r\n      <Route exact path=\"/about\" component={About} />\r\n\r\n      {\r\n        <Route\r\n          exact\r\n          path=\"/repo\"\r\n          render={() => (\r\n            isConnected ? (\r\n              <RepoList />\r\n            ) : (\r\n              <Redirect to=\"/\" />\r\n            )\r\n          )}\r\n        />\r\n      }\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n\r\n    {\r\n      (loading === true) && (\r\n        <div className=\"app-loading\">Chargement...</div>\r\n      )\r\n    }\r\n  </div>\r\n);\r\n\r\nApp.propTypes = {\r\n  loading: PropTypes.bool.isRequired,\r\n  isConnected: PropTypes.bool.isRequired,\r\n  errorMessage: PropTypes.string.isRequired,\r\n};\r\n\r\n/**\r\n * Export\r\n */\r\nexport default App;\r\n","import { connect } from 'react-redux';\r\nimport App from '../components/App';\r\n\r\nconst mapStateToProps = state => ({\r\n  loading: state.loading,\r\n  isConnected: state.isConnected,\r\n  errorMessage: state.errorMessage,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios';\r\nimport { \r\n  SUBMIT_INPUT_SEARCH,\r\n  SUBMIT_INPUT_CONNEXION,\r\n  VIEW_REPO,\r\n  receivedData,\r\n  receivedRepoData,\r\n  receivedDataUser,\r\n  reveivedContentReadMe,\r\n  receivedRepoUserData,\r\n  displayErrorMessage,\r\n} from './reducer';\r\n// import {} from './reducer';\r\n\r\nconst ajaxMiddleware = store => next => (action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_INPUT_SEARCH:\r\n      next(action);\r\n\r\n      axios.get(`https://api.github.com/search/repositories?q=${store.getState().inputSearchValue}/&page=${store.getState().page}&per_page=30`, {\r\n        headers: {\r\n          Authorization: `token ${store.getState().inputConnexionValue}`,\r\n        },\r\n      })\r\n        .then((response) => {\r\n          const totalCount = response.data.total_count > 1000 ? 1000 : response.data.total_count;\r\n          const datas = response.data.items.map((data) => {\r\n            return {\r\n              id: data.id,\r\n              image: data.owner.avatar_url,\r\n              login: data.owner.login,\r\n              name: data.name,\r\n              description: data.description,\r\n              url: `${data.url}/contents`,\r\n              fav: false,\r\n              urlRepo: data.html_url,\r\n            };\r\n          });\r\n          store.dispatch(receivedData(datas, totalCount));\r\n        })\r\n        .catch((error) => {\r\n          // console.log(error);\r\n          const errorMessage = 'Aucun résultat ne correspond a votre recherche';\r\n          store.dispatch(displayErrorMessage(errorMessage));\r\n        });\r\n      break;\r\n    case VIEW_REPO:\r\n      next(action);\r\n      // first requete\r\n      axios.get(store.getState().repoUrl, {\r\n\r\n      })\r\n        .then((response) => {\r\n          let newDataArray = '';\r\n          const datasRepo = response.data;\r\n          let urlReadMe = '';\r\n\r\n          datasRepo.map((data) => {\r\n            // console.log(data);\r\n            const file = datasRepo.filter(data => data.type === 'file');\r\n            const dir = datasRepo.filter(data => data.type === 'dir');\r\n            newDataArray = [...dir, ...file];\r\n\r\n            if (data.name === 'README.md') {\r\n              urlReadMe = data.download_url;\r\n            }\r\n          });\r\n\r\n          // second requete\r\n          // console.log(urlReadMe);\r\n          axios.get(urlReadMe, {\r\n\r\n          })\r\n            .then((rep) => {\r\n              const contentReadMe = rep.data;\r\n              store.dispatch(receivedRepoData(newDataArray));\r\n              store.dispatch(reveivedContentReadMe(contentReadMe));\r\n            })\r\n            .catch((error) => {\r\n              const errorMessage = 'Aucun fichier README.md trouvé';\r\n              store.dispatch(displayErrorMessage(errorMessage));\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          const errorMessage = 'Aucun repos trouvé';\r\n          store.dispatch(displayErrorMessage(errorMessage));\r\n        });\r\n      break;\r\n    case SUBMIT_INPUT_CONNEXION:\r\n      next(action);\r\n      axios.get('https://api.github.com/user', {\r\n        headers: {\r\n          Authorization: `token ${store.getState().inputConnexionValue}`,\r\n        },\r\n      })\r\n        .then((response) => {          \r\n          const dataUser = response.data;\r\n\r\n          const userData = {\r\n            image: dataUser.avatar_url,\r\n            bio: dataUser.bio,\r\n            blog: dataUser.blog,\r\n            login: dataUser.login,\r\n            url: dataUser.repos_url,\r\n          };\r\n\r\n          axios.get(`${dataUser.repos_url}?direction='desc'`, {\r\n            headers: {\r\n              Authorization: `token ${store.getState().inputConnexionValue}`,\r\n            },\r\n          })\r\n            .then((response) => {\r\n              store.dispatch(receivedDataUser(userData));\r\n              store.dispatch(receivedRepoUserData(response.data));\r\n            })\r\n            .catch((error) => {\r\n              // console.log(error);\r\n              const errorMessage = 'Aucun repos trouvé';\r\n              store.dispatch(displayErrorMessage(errorMessage));\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          // console.log(error);\r\n          const errorMessage = 'Aucun utilisateur trouvé';\r\n          store.dispatch(displayErrorMessage(errorMessage));\r\n        });\r\n      break;\r\n    default:\r\n      return next(action);\r\n  }\r\n}\r\n\r\nexport default ajaxMiddleware;\r\n","/*\r\n * Npm import\r\n */\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\n\r\n/*\r\n * Local import\r\n */\r\n// Reducer\r\nimport reducer from './reducer';\r\nimport ajaxMiddleware from './ajaxMiddleware';\r\n\r\nconst appliedMiddlewares = applyMiddleware(ajaxMiddleware);\r\n/*\r\n * Code\r\n */\r\nconst devTools = [];\r\nif (window.devToolsExtension) {\r\n  devTools.push(window.devToolsExtension());\r\n}\r\n\r\n// createStore\r\nconst enhancers = compose(appliedMiddlewares, ...devTools);\r\n\r\nconst store = createStore(reducer, enhancers);\r\n\r\n/*\r\n * Export\r\n */\r\nexport default store;\r\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './index.scss';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\n\n// store\nimport store from './store';\n\nconst rootComponent = (\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n);\n  \nrender(rootComponent, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}